[ {
  "name" : "Microarray",
  "categories" : [ {
    "name" : "Normalisation",
    "color" : "#d5c796",
    "hidden" : false,
    "tools" : [ {
      "id" : "norm-affy.R",
      "name" : "Affymetrix"
    }, {
      "id" : "norm-affy-exon.R",
      "name" : "Affymetrix exon arrays"
    }, {
      "id" : "norm-affy-gene.R",
      "name" : "Affymetrix gene arrays"
    }, {
      "id" : "norm-affy-snp.R",
      "name" : "Affymetrix SNP arrays"
    }, {
      "id" : "norm-agilent-one-color.R",
      "name" : "Agilent 1-color"
    }, {
      "id" : "norm-agilent.R",
      "name" : "Agilent 2-color"
    }, {
      "id" : "norm-agilent-miRNA.R",
      "name" : "Agilent miRNA"
    }, {
      "id" : "norm-cdna.R",
      "name" : "cDNA"
    }, {
      "id" : "norm-illumina.R",
      "name" : "Illumina"
    }, {
      "id" : "norm-illumina-backgroundcorr.R",
      "name" : "Illumina with normexp background correction"
    }, {
      "id" : "norm-illumina-lumi.R",
      "name" : "Illumina - lumi pipeline"
    }, {
      "id" : "norm-illumina-methylumi.R",
      "name" : "Illumina - methylumi pipeline"
    }, {
      "id" : "norm-illumina-SNP.R",
      "name" : "Illumina SNP arrays"
    }, {
      "id" : "norm-prenormalized.R",
      "name" : "Process prenormalized"
    }, {
      "id" : "norm-prenormalized-affy.R",
      "name" : "Process prenormalized affy"
    }, {
      "id" : "norm-lme.R",
      "name" : "Random effects"
    }, {
      "id" : "norm-combat.R",
      "name" : "ComBat - batch normalisation"
    }, {
      "id" : "norm-chip-average.R",
      "name" : "Normalize to chip average"
    }, {
      "id" : "norm-gene-average.R",
      "name" : "Normalize to gene average"
    }, {
      "id" : "norm-specific-samples.R",
      "name" : "Normalize to specific samples"
    }, {
      "id" : "norm-specific-genes.R",
      "name" : "Normalize to specific genes"
    } ]
  }, {
    "name" : "Quality control",
    "color" : "#e7df70",
    "hidden" : false,
    "tools" : [ {
      "id" : "qc-affy.R",
      "name" : "Affymetrix basic"
    }, {
      "id" : "qc-affy-rle-nuse.R",
      "name" : "Affymetrix - using RLE and NUSE"
    }, {
      "id" : "qc-affy-exon-rle-nuse.R",
      "name" : "Affymetrix exon/gene arrays - using RLE and NUSE"
    }, {
      "id" : "qc-illumina.R",
      "name" : "Illumina"
    }, {
      "id" : "qc-agilent.R",
      "name" : "Agilent 2-color"
    }, {
      "id" : "qc-agilent-one-color.R",
      "name" : "Agilent 1-color"
    }, {
      "id" : "qc-cdna.R",
      "name" : "cDNA"
    } ]
  }, {
    "name" : "Preprocessing",
    "color" : "#d59f45",
    "hidden" : false,
    "tools" : [ {
      "id" : "filter-expression.R",
      "name" : "Filter by expression"
    }, {
      "id" : "filter-flags.R",
      "name" : "Filter by flags"
    }, {
      "id" : "filter-sd.R",
      "name" : "Filter by standard deviation"
    }, {
      "id" : "filter-iqr.R",
      "name" : "Filter by interquartile range"
    }, {
      "id" : "filter-cv.R",
      "name" : "Filter by coefficient of variation"
    }, {
      "id" : "filter-by-column-term.R",
      "name" : "Filter using a column term"
    }, {
      "id" : "filter-by-column-value.R",
      "name" : "Filter using a column value"
    }, {
      "id" : "impute.R",
      "name" : "Impute missing values"
    }, {
      "id" : "na-omitted.R",
      "name" : "Remove missing values"
    }, {
      "id" : "dichotomize-continious-data.R",
      "name" : "Dichotomize continuous data"
    } ]
  }, {
    "name" : "Statistics",
    "color" : "#e7881c",
    "hidden" : false,
    "tools" : [ {
      "id" : "stat-one-group.R",
      "name" : "One sample tests"
    }, {
      "id" : "stat-two-groups.R",
      "name" : "Two groups tests"
    }, {
      "id" : "stat-ROTS.R",
      "name" : "ROTS"
    }, {
      "id" : "stat-sam.R",
      "name" : "SAM"
    }, {
      "id" : "stat-several-groups.R",
      "name" : "Several groups tests"
    }, {
      "id" : "stat-linear-modelling.R",
      "name" : "Linear modelling"
    }, {
      "id" : "stat-linear-modelling-designmat.R",
      "name" : "Linear modelling using user-defined design matrix"
    }, {
      "id" : "stat-proportions.R",
      "name" : "Test proportions"
    }, {
      "id" : "stat-correlate-with-phenodata.R",
      "name" : "Correlate with phenodata"
    }, {
      "id" : "correlation-analysis-mirna.R",
      "name" : "Correlate miRNA with target expression"
    }, {
      "id" : "stat-timeseries.R",
      "name" : "Time series"
    }, {
      "id" : "stat-chisq-snp.R",
      "name" : "Association analysis"
    }, {
      "id" : "stat-adjust-pvalues.R",
      "name" : "Adjust p-values"
    }, {
      "id" : "ordination-pca.R",
      "name" : "PCA"
    }, {
      "id" : "ordination-ca.R",
      "name" : "DCA"
    }, {
      "id" : "ordination-nmds.R",
      "name" : "NMDS"
    }, {
      "id" : "estimate-samplesize.R",
      "name" : "Sample size estimation"
    }, {
      "id" : "sample-size-with-bh.R",
      "name" : "Sample size calculations with an adapted BH method"
    }, {
      "id" : "up-down-analysis-mirna.R",
      "name" : "Up-down analysis of miRNA targets"
    } ]
  }, {
    "name" : "Clustering",
    "color" : "#d53833",
    "hidden" : false,
    "tools" : [ {
      "id" : "classification-knn.R",
      "name" : "KNN classification"
    }, {
      "id" : "cluster-hierarchical.R",
      "name" : "Hierarchical"
    }, {
      "id" : "cluster-kmeans.R",
      "name" : "K-Means"
    }, {
      "id" : "cluster-kmeans-testK.R",
      "name" : "K-Means - estimate K"
    }, {
      "id" : "cluster-qt.R",
      "name" : "Quality Threshold (QT)"
    }, {
      "id" : "cluster-som.R",
      "name" : "Self-organizing map (SOM)"
    }, {
      "id" : "classification.R",
      "name" : "Classification"
    } ]
  }, {
    "name" : "Annotation",
    "color" : "#80a3b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "annotate-genelist2html.R",
      "name" : "Agilent, Affymetrix or Illumina genelist"
    }, {
      "id" : "annotate-add-to-data.R",
      "name" : "Add annotations to data"
    }, {
      "id" : "add-locations-to-data.R",
      "name" : "Add genomic location to data"
    }, {
      "id" : "annotate-miRNA-targets.R",
      "name" : "Find miRNA targets"
    }, {
      "id" : "annotate-agilent-miRNA.R",
      "name" : "miRNA annotations"
    } ]
  }, {
    "name" : "Pathways",
    "color" : "#0177b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "stat-hyperG-GO.R",
      "name" : "Hypergeometric test for GO"
    }, {
      "id" : "stat-hyperG-KEGG-PFAM.R",
      "name" : "Hypergeometric test for KEGG or PFAM"
    }, {
      "id" : "stat-hyperG-safe.R",
      "name" : "SAFE test for KEGG pathway enrichment"
    }, {
      "id" : "stat-hyperG-cytoband.R",
      "name" : "Hypergeometric test for cytobands"
    }, {
      "id" : "stat-geneset.R",
      "name" : "Gene set test"
    }, {
      "id" : "pathways-mirna-hyperg-go.R",
      "name" : "GO enrichment for miRNA targets"
    }, {
      "id" : "pathways-mirna-hyperg-kegg.R",
      "name" : "KEGG enrichment for miRNA targets"
    }, {
      "id" : "annotate-cpdb.py",
      "name" : "Hypergeometric test for ConsensusPathDB"
    } ]
  }, {
    "name" : "Promoter analysis",
    "color" : "#629a9b",
    "hidden" : false,
    "tools" : [ {
      "id" : "promoter-tfbs.R",
      "name" : "Weeder"
    }, {
      "id" : "promoter-retrprom.R",
      "name" : "Retrieve promoters"
    } ]
  }, {
    "name" : "Copy number aberrations",
    "color" : "#c0d2de",
    "hidden" : false,
    "tools" : [ {
      "id" : "import-soft2.R",
      "name" : "Import from GEO"
    }, {
      "id" : "acgh-import-from-cangem.R",
      "name" : "Import from CanGEM"
    }, {
      "id" : "acgh-normalize.R",
      "name" : "Normalize copy number data"
    }, {
      "id" : "acgh-plot-profile.R",
      "name" : "Plot copy number profiles"
    }, {
      "id" : "acgh-smooth.R",
      "name" : "Smooth waves from normalized aCGH data"
    }, {
      "id" : "acgh-segment.R",
      "name" : "Segment copy number data"
    }, {
      "id" : "acgh-call-aberrations.R",
      "name" : "Call aberrations from segmented copy number data"
    }, {
      "id" : "acgh-identify-regions.R",
      "name" : "Identify common regions from called copy number data"
    }, {
      "id" : "acgh-add-cytobands.R",
      "name" : "Add cytogenetic bands"
    }, {
      "id" : "acgh-count-overlapping-cnvs.R",
      "name" : "Count overlapping CNVs"
    }, {
      "id" : "acgh-plot-frequencies.R",
      "name" : "Plot copy number aberration frequencies"
    }, {
      "id" : "cna-count-aberrations.R",
      "name" : "Count the number of aberrations per sample"
    }, {
      "id" : "acgh-cluster.R",
      "name" : "Cluster called copy number data"
    }, {
      "id" : "cna-correlate.R",
      "name" : "Plot correlations of called copy number data"
    }, {
      "id" : "acgh-group-test.R",
      "name" : "Group tests for called copy number data"
    }, {
      "id" : "acgh-survival-test.R",
      "name" : "Survival test for called copy number data"
    }, {
      "id" : "acgh-plot-survival.R",
      "name" : "Plot survival curves for called copy number data"
    }, {
      "id" : "cna-fuse-regions-by-column.R",
      "name" : "Fuse regions by column value"
    }, {
      "id" : "cna-fuse-regions-manually.R",
      "name" : "Fuse regions manually"
    }, {
      "id" : "acgh-convert-from-probes-to-genes.R",
      "name" : "Detect genes from called copy number data"
    }, {
      "id" : "acgh-pathways-go.R",
      "name" : "GO enrichment for called gene copy numbers"
    }, {
      "id" : "acgh-match-probes.R",
      "name" : "Match copy number and expression features"
    }, {
      "id" : "acgh-plot-combined-profile.R",
      "name" : "Plot profiles of matched copy number and expression"
    }, {
      "id" : "acgh-expression-test.R",
      "name" : "Test for copy-number-induced expression changes"
    }, {
      "id" : "acgh-plot-combined-expression.R",
      "name" : "Plot copy-number-induced gene expression"
    }, {
      "id" : "acgh-fetch-probe-positions-from-geo.R",
      "name" : "Fetch probe positions from GEO"
    }, {
      "id" : "acgh-fetch-probe-positions-from-cangem.R",
      "name" : "Fetch probe positions from CanGEM"
    } ]
  }, {
    "name" : "Visualisation",
    "color" : "#a49900",
    "hidden" : false,
    "tools" : [ {
      "id" : "plot-idiogram.R",
      "name" : "Idiogram"
    }, {
      "id" : "plot-chrom-pos.R",
      "name" : "Chromosomal position"
    }, {
      "id" : "plot-volcano.R",
      "name" : "Volcano plot"
    }, {
      "id" : "plot-volcano-data-exists.R",
      "name" : "Volcano plot from existing results"
    }, {
      "id" : "plot-boxplot.R",
      "name" : "Boxplot"
    }, {
      "id" : "plot-dendrogram.R",
      "name" : "Dendrogram"
    }, {
      "id" : "plot-histogram.R",
      "name" : "Histogram"
    }, {
      "id" : "plot-corrgram.R",
      "name" : "Correlogram"
    }, {
      "id" : "plot-heatmap.R",
      "name" : "Heatmap"
    }, {
      "id" : "plot-annoheatmap.R",
      "name" : "Annotated heatmap"
    } ]
  }, {
    "name" : "Utilities",
    "color" : "#83010b",
    "hidden" : false,
    "tools" : [ {
      "id" : "search-correlation.R",
      "name" : "Search by correlation"
    }, {
      "id" : "search-queryword.R",
      "name" : "Search by gene name"
    }, {
      "id" : "search-coordinates.R",
      "name" : "Search by genomic coordinates"
    }, {
      "id" : "filter-by-column-term.R",
      "name" : "Filter using a column term"
    }, {
      "id" : "filter-by-column-value.R",
      "name" : "Filter using a column value"
    }, {
      "id" : "delete-columns.R",
      "name" : "Delete columns"
    }, {
      "id" : "delete-and-subtract-columns.R",
      "name" : "Delete and subtract columns"
    }, {
      "id" : "merge-tables.R",
      "name" : "Merge tables"
    }, {
      "id" : "merge-datasets.R",
      "name" : "Merge data sets"
    }, {
      "id" : "merge-pheno-and-data.R",
      "name" : "Merge expression and phenodata"
    }, {
      "id" : "extract-genes-from-clustering.R",
      "name" : "Extract genes from clustering"
    }, {
      "id" : "extract-genes-from-go.R",
      "name" : "Extract genes from GO term"
    }, {
      "id" : "extract-genes-from-kegg.R",
      "name" : "Extract genes from KEGG pathway"
    }, {
      "id" : "extract-samples-from-dataset.R",
      "name" : "Extract samples from table"
    }, {
      "id" : "extract-genes-from-stattest.R",
      "name" : "Extract genes using a p-value"
    }, {
      "id" : "extract-genes.R",
      "name" : "Extract genes"
    }, {
      "id" : "calculate-fold-change.R",
      "name" : "Calculate fold change"
    }, {
      "id" : "average-replicates.R",
      "name" : "Average replicate chips"
    }, {
      "id" : "combine-probes-to-genes.R",
      "name" : "Combine probes to genes"
    }, {
      "id" : "change-interpretation.R",
      "name" : "Change interpretation"
    }, {
      "id" : "generate-phenodata.R",
      "name" : "Generate phenodata"
    }, {
      "id" : "calculate-descriptive-statistics.R",
      "name" : "Calculate descriptive statistics"
    }, {
      "id" : "sort-samples.R",
      "name" : "Sort samples"
    }, {
      "id" : "sort-genes.R",
      "name" : "Sort genes"
    }, {
      "id" : "sampling.R",
      "name" : "Random sampling"
    }, {
      "id" : "export-tab2mage.R",
      "name" : "Export tab2mage format"
    }, {
      "id" : "export-soft.R",
      "name" : "Export GEO's SOFT format"
    }, {
      "id" : "import-soft2.R",
      "name" : "Import from GEO"
    }, {
      "id" : "import-ArrayExpress.R",
      "name" : "Import from ArrayExpress"
    }, {
      "id" : "intersect-lists.R",
      "name" : "Intersect lists"
    }, {
      "id" : "output_test.R",
      "name" : "Output test"
    }, {
      "id" : "join_tsv_files.R",
      "name" : "Join tables"
    } ]
  }, {
    "name" : "Hidden",
    "color" : "#0",
    "hidden" : true,
    "tools" : [ {
      "id" : "test.R",
      "name" : "Parameter demo"
    }, {
      "id" : "no-operation.R",
      "name" : "No-op"
    }, {
      "id" : "echo.R",
      "name" : "Echo"
    }, {
      "id" : "fail.R",
      "name" : "Fail"
    }, {
      "id" : "input-output.R",
      "name" : "InputOutput"
    }, {
      "id" : "simple-input-output.R",
      "name" : "SimpleInputOutput"
    }, {
      "id" : "data-throughput.R",
      "name" : "DataThroughput"
    }, {
      "id" : "sleep.R",
      "name" : "Sleep"
    }, {
      "id" : "input-sleep-output.R",
      "name" : "InputSleepOutput"
    } ]
  } ]
}, {
  "name" : "Misc",
  "categories" : [ {
    "name" : "Data retrieval",
    "color" : "#e7df70",
    "hidden" : false,
    "tools" : [ {
      "id" : "edirect_fetch.py",
      "name" : "Retrieve sequences from NCBI"
    }, {
      "id" : "srafetch.R",
      "name" : "Retrieve FASTQ files from SRA database"
    }, {
      "id" : "srabamfetch.R",
      "name" : "Retrieve BAM files from SRA database"
    }, {
      "id" : "ensemblfetch.R",
      "name" : "Retrieve data for a given organism in Ensembl"
    }, {
      "id" : "dbfetch.R",
      "name" : "Retrieve entries from public databases"
    }, {
      "id" : "dbfetch_list.R",
      "name" : "Retrieve listed entries from public databases"
    }, {
      "id" : "entret_list.R",
      "name" : "Retrieve sequences from sequence file"
    }, {
      "id" : "DownloadFile.java",
      "name" : "Download file from URL directly to server"
    } ]
  }, {
    "name" : "BLAST",
    "color" : "#d59f45",
    "hidden" : false,
    "tools" : [ {
      "id" : "ncbi_blastn.R",
      "name" : "Nucleotide BLAST"
    }, {
      "id" : "my_blastn.R",
      "name" : "Nucleotide BLAST against users own nucleotide sequence set"
    }, {
      "id" : "ensembl_blastn.R",
      "name" : "Nucleotide BLAST against the genome or transcriptome of a given species in Ensembl"
    }, {
      "id" : "ncbi_blastp.R",
      "name" : "Protein BLAST"
    }, {
      "id" : "my_blastp.R",
      "name" : "Protein BLAST against users own protein sequence set"
    }, {
      "id" : "ensembl_blastp.R",
      "name" : "Protein BLAST against the proteome of a given species in Ensembl"
    }, {
      "id" : "ncbi_blastx.R",
      "name" : "Translated nucleotide BLAST"
    }, {
      "id" : "my_blastx.R",
      "name" : "Translated nucleotide BLAST against users own protein sequcense set."
    }, {
      "id" : "ensembl_blastx.R",
      "name" : "Translated nucleotide BLAST against the proteome of a given species in Ensembl."
    }, {
      "id" : "ncbi_tblastn.R",
      "name" : "Translated protein BLAST "
    }, {
      "id" : "my_tblastn.R",
      "name" : "Translated protein BLAST against users of nucleotide sequence set"
    }, {
      "id" : "ensembl_tblastn.R",
      "name" : "Translated protein BLAST against genome or transcriptome of a given species in Ensembl"
    } ]
  }, {
    "name" : "Sequence alignment",
    "color" : "#d59f45",
    "hidden" : false,
    "tools" : [ {
      "id" : "stretcher.R",
      "name" : "Global pairwise sequence alignment"
    }, {
      "id" : "matcher.R",
      "name" : "Local pairwise sequence alignment"
    }, {
      "id" : "mafft.R",
      "name" : "Multiple sequence alignment with MAFFT"
    }, {
      "id" : "diffseq.R",
      "name" : "Compare two similar sequences"
    }, {
      "id" : "dotmatcher.R",
      "name" : "Threshold dotplot of two sequences"
    }, {
      "id" : "polydot.R",
      "name" : "Dotplots for a sequence set"
    }, {
      "id" : "cons.R",
      "name" : "Create a consensus sequence"
    }, {
      "id" : "plotcon.R",
      "name" : "Alignment conservation plot"
    }, {
      "id" : "infoalign.R",
      "name" : "Alignment statistics"
    }, {
      "id" : "showalign.R",
      "name" : "Display a multiple sequence alignment as formatted text"
    }, {
      "id" : "mview.R",
      "name" : "Display sequence alignment or BLAST report as HTML page"
    } ]
  }, {
    "name" : "Nucleic sequence analysis",
    "color" : "#e7881c",
    "hidden" : false,
    "tools" : [ {
      "id" : "eprimer.R",
      "name" : "Design PCR primers and hybridization oligos with Primer3"
    }, {
      "id" : "fuzznuc.R",
      "name" : "Nucleotide pattern search"
    }, {
      "id" : "getorf.R",
      "name" : "Find open reading farmes"
    }, {
      "id" : "plotorf.R",
      "name" : "Plot open reading frames"
    }, {
      "id" : "restrict.R",
      "name" : "Find restriction enzyme cleavage sites"
    }, {
      "id" : "remap.R",
      "name" : "Display restriction enzyme binding sites"
    }, {
      "id" : "revseq.R",
      "name" : "Reverse sequence"
    }, {
      "id" : "transeq.R",
      "name" : "Translate"
    } ]
  }, {
    "name" : "Protein sequence analysis",
    "color" : "#d53833",
    "hidden" : false,
    "tools" : [ {
      "id" : "protfilter.R",
      "name" : "Filter protein sequence sets"
    }, {
      "id" : "fuzzpro.R",
      "name" : "Protein pattern search"
    } ]
  }, {
    "name" : "Sequence utilities",
    "color" : "#80a3b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "infoseq_summary.R",
      "name" : "Sequence file summary"
    }, {
      "id" : "infoseq.R",
      "name" : "Display basic information about sequences"
    }, {
      "id" : "textsearch_fasta.R",
      "name" : "Select sequences based on descriptions"
    }, {
      "id" : "seqor.R",
      "name" : "Merge two sequence sets using logical operators"
    }, {
      "id" : "seqret.R",
      "name" : "Sequence format conversion"
    }, {
      "id" : "cdhit.R",
      "name" : "Remove redundant sequences"
    }, {
      "id" : "skipredundant.R",
      "name" : "Skip redundant sequences"
    }, {
      "id" : "extractseq.R",
      "name" : "Extract regions from a sequence"
    }, {
      "id" : "descseq.R",
      "name" : "Modify sequence name or description"
    }, {
      "id" : "biosed.R",
      "name" : "Replace or delete sequence sections"
    }, {
      "id" : "emboss.R",
      "name" : "Other sequence utilities"
    } ]
  }, {
    "name" : "Phylogeny",
    "color" : "#0177b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "fdnadist.R",
      "name" : "Nucleic acid distance algorithm"
    }, {
      "id" : "fdnapars.R",
      "name" : "DNA parsimony algorithm"
    }, {
      "id" : "fprotdist.R",
      "name" : "Protein distance algorithm"
    }, {
      "id" : "fprotpars.R",
      "name" : "Protein parsimony algorithm"
    }, {
      "id" : "fneighbor.R",
      "name" : "Phylogenies from distance matrix by N-J or UPGMA method"
    }, {
      "id" : "fdrawtree.R",
      "name" : "Plot an unrooted tree"
    }, {
      "id" : "fdrawgram.R",
      "name" : "Plot a cladogram"
    }, {
      "id" : "fdnaml.R",
      "name" : "Estimate nucleotide phylogeny by maximum likelihood"
    } ]
  }, {
    "name" : "Utilities",
    "color" : "#629a9b",
    "hidden" : false,
    "tools" : [ {
      "id" : "taxonomy_tool.R",
      "name" : "Get taxonomy information"
    }, {
      "id" : "emboss_files.R",
      "name" : "Simple file operations"
    }, {
      "id" : "select_columns.R",
      "name" : "Table converter"
    }, {
      "id" : "sort_and_select_columns.R",
      "name" : "Sort table by column"
    }, {
      "id" : "general_file_processing.R",
      "name" : "Modify text"
    }, {
      "id" : "concatenate.R",
      "name" : "Concatenate two files"
    }, {
      "id" : "join_tsv_files.R",
      "name" : "Join tables"
    }, {
      "id" : "extract_gzip_tar.py",
      "name" : "Extract .tar.gz file"
    }, {
      "id" : "gunzip.py",
      "name" : "Extract .gz file"
    } ]
  } ]
}, {
  "name" : "NGS",
  "categories" : [ {
    "name" : "Quality control",
    "color" : "#d5c796",
    "hidden" : false,
    "tools" : [ {
      "id" : "fastqc.R",
      "name" : "Read quality with FastQC"
    }, {
      "id" : "fastx-statistics.R",
      "name" : "Read quality statistics with FASTX"
    }, {
      "id" : "prinseq-statistics.R",
      "name" : "Read quality statistics with PRINSEQ"
    }, {
      "id" : "rseqc.R",
      "name" : "RNA-seq quality metrics with RseQC"
    }, {
      "id" : "picard-collectmultiplemetrics.R",
      "name" : "Collect multiple metrics from BAM"
    }, {
      "id" : "deseq2-pca-heatmap.R",
      "name" : "PCA and heatmap of samples with DESeq2"
    } ]
  }, {
    "name" : "Preprocessing",
    "color" : "#e7df70",
    "hidden" : false,
    "tools" : [ {
      "id" : "prinseq-filter.R",
      "name" : "Filter reads for several criteria with PRINSEQ"
    }, {
      "id" : "fastx-clipper.R",
      "name" : "Filter reads for adapters, length and Ns with FastX"
    }, {
      "id" : "fastx-quality-filter.R",
      "name" : "Filter reads for quality with FastX"
    }, {
      "id" : "prinseq-trimmer.R",
      "name" : "Trim reads for several criteria with PRINSEQ"
    }, {
      "id" : "trimmomatic.R",
      "name" : "Trim reads with Trimmomatic"
    }, {
      "id" : "fastx-trimmer.R",
      "name" : "Trim reads with FastX"
    }, {
      "id" : "tagcleaner-trim.R",
      "name" : "Trim primers/adaptors with TagCleaner"
    }, {
      "id" : "tagcleaner-predict.R",
      "name" : "Predict primers/adaptors with TagCleaner"
    }, {
      "id" : "tagcleaner-statistics.R",
      "name" : "Statistics for primers/adaptors with TagCleaner"
    } ]
  }, {
    "name" : "Utilities",
    "color" : "#d59f45",
    "hidden" : false,
    "tools" : [ {
      "id" : "ngs-create-experiment.R",
      "name" : "Define NGS experiment"
    }, {
      "id" : "ngs-filter-annotations.R",
      "name" : "Filter table by column term"
    }, {
      "id" : "ngs-filter-results-column.R",
      "name" : "Filter table by column value"
    }, {
      "id" : "filter-bed-value.R",
      "name" : "Filter BED by column value"
    }, {
      "id" : "extract-samples-from-dataset.R",
      "name" : "Extract samples from table"
    }, {
      "id" : "select_columns.R",
      "name" : "Table converter"
    }, {
      "id" : "sort_and_select_columns.R",
      "name" : "Sort table by column"
    }, {
      "id" : "join_tsv_files.R",
      "name" : "Join tables"
    }, {
      "id" : "general_file_processing.R",
      "name" : "Modify text"
    }, {
      "id" : "process-preprocessed-counts.R",
      "name" : "Preprocess count table"
    }, {
      "id" : "normalise-counts.R",
      "name" : "Normalize count table"
    }, {
      "id" : "deseq2-normalized-counts-for-gene.R",
      "name" : "Plot normalized counts for a gene"
    }, {
      "id" : "annotate-ensembl-ids.R",
      "name" : "Annotate Ensembl identifiers"
    }, {
      "id" : "samtools-index.R",
      "name" : "Index BAM"
    }, {
      "id" : "samtools-sort-index-BAM.R",
      "name" : "Sort and index BAM"
    }, {
      "id" : "samtools-convert-SAMtoBAM-sort-index.R",
      "name" : "Convert SAM to BAM, sort and index"
    }, {
      "id" : "samtools-subset.R",
      "name" : "Make a subset of BAM"
    }, {
      "id" : "samtools-merge.R",
      "name" : "Merge BAM"
    }, {
      "id" : "samtools-idxstats.R",
      "name" : "Count alignments per chromosome in BAM"
    }, {
      "id" : "samtools-alignment-statistics.R",
      "name" : "Count alignment statistics for BAM"
    }, {
      "id" : "samtools-count.R",
      "name" : "Count alignments in BAM"
    }, {
      "id" : "samtools-rmdup.R",
      "name" : "Remove duplicate reads from BAM"
    }, {
      "id" : "picard-markduplicates.R",
      "name" : "Mark duplicates in BAM"
    }, {
      "id" : "samtools-consensus.R",
      "name" : "Create consensus sequence from BAM"
    }, {
      "id" : "unique-alignments-from-bam.R",
      "name" : "Retrieve unique alignments from BAM"
    }, {
      "id" : "bedtools-bamtobed.R",
      "name" : "Convert BAM to BED"
    }, {
      "id" : "fastx-fastq-to-fasta.R",
      "name" : "Convert FASTQ to FASTA"
    }, {
      "id" : "subset-fastq.R",
      "name" : "Make a subset of FASTQ"
    }, {
      "id" : "samtools-index-fasta.R",
      "name" : "Index FASTA"
    }, {
      "id" : "fastx-renamer.R",
      "name" : "Rename reads in FASTQ"
    }, {
      "id" : "fastx-collapser.R",
      "name" : "Remove duplicate reads from FASTQ"
    }, {
      "id" : "SortBed.java",
      "name" : "Sort BED"
    }, {
      "id" : "SortGtf.java",
      "name" : "Sort GTF"
    }, {
      "id" : "SortTsv.java",
      "name" : "Sort TSV"
    }, {
      "id" : "SortVcf.java",
      "name" : "Sort VCF"
    }, {
      "id" : "extract-features-from-BED.R",
      "name" : "Extract features from BED"
    }, {
      "id" : "bedtools-fastafrombed.R",
      "name" : "FASTA from BED"
    }, {
      "id" : "srafetch.R",
      "name" : "Retrieve FASTQ files from SRA database"
    }, {
      "id" : "srabamfetch.R",
      "name" : "Retrieve BAM files from SRA database"
    }, {
      "id" : "DownloadFile.java",
      "name" : "Download file from URL directly to server"
    }, {
      "id" : "ensemblfetch.R",
      "name" : "Retrieve data for a given organism in Ensembl"
    }, {
      "id" : "extract_gzip_tar.py",
      "name" : "Extract .tar.gz file"
    }, {
      "id" : "gunzip.py",
      "name" : "Extract .gz file"
    }, {
      "id" : "a5-miseq.R",
      "name" : "A5 assembly pipeline for microbial genomes"
    }, {
      "id" : "test-data-in.R",
      "name" : "Test data input"
    }, {
      "id" : "test-data-in-out.R",
      "name" : "Test data input and output in R"
    }, {
      "id" : "test-data-in-out.py",
      "name" : "Test data input and output in Python"
    } ]
  }, {
    "name" : "Matching sets of genomic regions",
    "color" : "#e7881c",
    "hidden" : false,
    "tools" : [ {
      "id" : "FindOverlappingTool.java",
      "name" : "Find overlapping regions"
    }, {
      "id" : "RemoveOverlappingTool.java",
      "name" : "Remove overlapping regions"
    }, {
      "id" : "CombineRegionsTool.java",
      "name" : "Combine region files"
    }, {
      "id" : "bedtools-subtractbed.R",
      "name" : "Subtract BED"
    }, {
      "id" : "bedtools-intersectbed.R",
      "name" : "Intersect BED"
    }, {
      "id" : "bedtools-closestbed.R",
      "name" : "Closest BED"
    }, {
      "id" : "bedtools-windowbed.R",
      "name" : "Window BED"
    }, {
      "id" : "bedtools-coveragebed.R",
      "name" : "Coverage BED"
    }, {
      "id" : "bedtools-genomecoveragebed.R",
      "name" : "Genome coverage BED"
    }, {
      "id" : "bedtools-overlap.R",
      "name" : "Overlap BED"
    }, {
      "id" : "bedtools-slopbed.R",
      "name" : "Increase regions in BED"
    }, {
      "id" : "bedtools-pairtobed.R",
      "name" : "Overlap BEDPE with BED"
    }, {
      "id" : "bedtools-pairtopair.R",
      "name" : "Compare two BEDPE files"
    } ]
  }, {
    "name" : "Alignment",
    "color" : "#d53833",
    "hidden" : false,
    "tools" : [ {
      "id" : "bowtie2.R",
      "name" : "Bowtie2 for single end reads"
    }, {
      "id" : "bowtie2-paired-end.R",
      "name" : "Bowtie2 for paired end reads"
    }, {
      "id" : "bowtie2-with-index-building.R",
      "name" : "Bowtie2 for single end reads and own genome"
    }, {
      "id" : "bowtie2-paired-end-with-index-building.R",
      "name" : "Bowtie2 for paired end reads and own genome"
    }, {
      "id" : "tophat2.R",
      "name" : "TopHat2 for paired end reads"
    }, {
      "id" : "tophat2-single-end.R",
      "name" : "TopHat2 for single end reads"
    }, {
      "id" : "tophat2-with-index-building.R",
      "name" : "TopHat2 for paired end reads and own genome"
    }, {
      "id" : "tophat2-single-end-with-index-building.R",
      "name" : "TopHat2 for single end reads and own genome"
    }, {
      "id" : "bwa-mem.R",
      "name" : "BWA MEM for single or paired end reads"
    }, {
      "id" : "bwa-mem-with-index-building.R",
      "name" : "BWA MEM for single or paired end reads and own genome"
    }, {
      "id" : "bwa.R",
      "name" : "BWA-backtrack for single end reads"
    }, {
      "id" : "bwa-paired-end.R",
      "name" : "BWA-backtrack for paired end reads"
    }, {
      "id" : "bwa-with-index-building.R",
      "name" : "BWA-backtrack for single end reads and own genome"
    }, {
      "id" : "bwa-paired-end-with-index-building.R",
      "name" : "BWA-backtrack for paired end reads and own genome"
    }, {
      "id" : "bowtie.R",
      "name" : "Bowtie for single end reads"
    }, {
      "id" : "bowtie-paired-end.R",
      "name" : "Bowtie for paired end reads"
    }, {
      "id" : "bowtie-with-index-building.R",
      "name" : "Bowtie for single end reads and own genome"
    }, {
      "id" : "bowtie-paired-end-with-index-building.R",
      "name" : "Bowtie for paired end reads and own genome"
    } ]
  }, {
    "name" : "Variants",
    "color" : "#80a3b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "samtools-snp-indel-single.R",
      "name" : "Call SNPs and short INDELs"
    }, {
      "id" : "vcftools.R",
      "name" : "Filter variants"
    }, {
      "id" : "annotate-variant.R",
      "name" : "Annotate variants"
    }, {
      "id" : "vep.py",
      "name" : "Ensembl Variant Effect Predictor"
    }, {
      "id" : "bcftools-intersect-vcf.R",
      "name" : "Intersect VCF files"
    }, {
      "id" : "vcftools-reports.R",
      "name" : "Calculate statistics on VCF file"
    } ]
  }, {
    "name" : "RNA-seq",
    "color" : "#0177b7",
    "hidden" : false,
    "tools" : [ {
      "id" : "htseq-count.R",
      "name" : "Count aligned reads per genes with HTSeq"
    }, {
      "id" : "htseq-count-own-gtf.R",
      "name" : "Count aligned reads per genes with HTSeq using own GTF"
    }, {
      "id" : "dexseq-exoncount.R",
      "name" : "Count aligned reads per exons for DEXSeq"
    }, {
      "id" : "dexseq-exoncount-own-gtf.R",
      "name" : "Count aligned reads per exons for DEXSeq using own GTF"
    }, {
      "id" : "express.R",
      "name" : "Count reads per transcripts using eXpress"
    }, {
      "id" : "deseq2.R",
      "name" : "Differential expression using DESeq2"
    }, {
      "id" : "dea-deseq.R",
      "name" : "Differential expression using DESeq"
    }, {
      "id" : "ngs-dea-edger-RNA.R",
      "name" : "Differential expression using edgeR"
    }, {
      "id" : "edgeR-multivariate.R",
      "name" : "Differential expression using edgeR for multivariate experiments"
    }, {
      "id" : "DEXseq.R",
      "name" : "Differential exon expression using DEXSeq"
    }, {
      "id" : "cufflinks2.R",
      "name" : "Assemble transcripts using Cufflinks"
    }, {
      "id" : "cuffmerge2.R",
      "name" : "Merge transcript assemblies with Cuffmerge"
    }, {
      "id" : "cuffcompare2.R",
      "name" : "Compare assembly to reference using Cuffcompare"
    }, {
      "id" : "cuffdiff2.R",
      "name" : "Differential expression using Cuffdiff"
    }, {
      "id" : "annotate-cpdb.py",
      "name" : "Hypergeometric test for ConsensusPathDB"
    } ]
  }, {
    "name" : "miRNA-seq",
    "color" : "#629a9b",
    "hidden" : false,
    "tools" : [ {
      "id" : "convert-bam-to-edger.R",
      "name" : "Convert genomic BAM file to count table"
    }, {
      "id" : "convert-miRBase-bam-to-edger.R",
      "name" : "Convert miRBased BAM file to count table"
    }, {
      "id" : "deseq2.R",
      "name" : "Differential expression using DESeq2"
    }, {
      "id" : "dea-deseq.R",
      "name" : "Differential expression using DESeq"
    }, {
      "id" : "ngs-dea-edger-RNA.R",
      "name" : "Differential expression using edgeR"
    }, {
      "id" : "edgeR-multivariate.R",
      "name" : "Differential expression using edgeR for multivariate experiments"
    }, {
      "id" : "ngs-annotate-miRNA-targets.R",
      "name" : "Find miRNA targets"
    }, {
      "id" : "pathways-mirna-hyperg-go.R",
      "name" : "GO enrichment for miRNA targets"
    }, {
      "id" : "pathways-mirna-hyperg-kegg.R",
      "name" : "KEGG enrichment for miRNA targets"
    }, {
      "id" : "miRNA_RNA-seq_integration.R",
      "name" : "Correlate miRNA-seq and RNA-seq data"
    }, {
      "id" : "ngs-correlation-analysis-mirna.R",
      "name" : "Correlate miRNA-seq and gene expression array data"
    }, {
      "id" : "ngs-up-down-analysis-mirna.R",
      "name" : "Up-down analysis of miRNA target genes with array data"
    }, {
      "id" : "ngs-extract-target-gene-expression.R",
      "name" : "Extract gene expression array data for miRNA targets"
    } ]
  }, {
    "name" : "ChIP, DNase, and Methyl-seq",
    "color" : "#c0d2de",
    "hidden" : false,
    "tools" : [ {
      "id" : "macs2.R",
      "name" : "Find peaks using MACS2"
    }, {
      "id" : "ngs-find-peaks-macs-one.R",
      "name" : "Find peaks using MACS, treatment only"
    }, {
      "id" : "ngs-find-peaks-macs-two.R",
      "name" : "Find peaks using MACS, treatment vs. control"
    }, {
      "id" : "ngs-find-peaks-fseq.R",
      "name" : "Find broad peaks using F-seq"
    }, {
      "id" : "ngs-find-nearest-genes.R",
      "name" : "Find the nearest genes for regions"
    }, {
      "id" : "ngs-find-unique-genes.R",
      "name" : "Find unique and annotated genes"
    }, {
      "id" : "pathways-ngs-hyperg-go.R",
      "name" : "GO enrichment for list of genes"
    }, {
      "id" : "ngs-find-motifs-jaspar.R",
      "name" : "Find motifs with GADEM and match to JASPAR"
    }, {
      "id" : "dimont-extract-data.R",
      "name" : "Dimont sequence extractor"
    }, {
      "id" : "dimont-extract-data-custom.R",
      "name" : "Dimont sequence extractor using own genome"
    }, {
      "id" : "dimont.R",
      "name" : "Find motifs with Dimont"
    }, {
      "id" : "dimont-predictor.R",
      "name" : "DimontPredictor"
    }, {
      "id" : "MEDIPS.R",
      "name" : "MEDIPS - methylation analysis"
    } ]
  }, {
    "name" : "CNA-seq",
    "color" : "#a49900",
    "hidden" : false,
    "tools" : [ {
      "id" : "cna-define-experiment.R",
      "name" : "Define CNA-seq experiment"
    }, {
      "id" : "cna-filter-bins.R",
      "name" : "Filter copy number bins"
    }, {
      "id" : "cna-correct.R",
      "name" : "Correct for GC content and mappability"
    }, {
      "id" : "cna-normalize.R",
      "name" : "Normalize copy number data"
    }, {
      "id" : "cna-plot-profile.R",
      "name" : "Plot copy number profiles"
    }, {
      "id" : "cna-segment.R",
      "name" : "Segment copy number data"
    }, {
      "id" : "cna-call-aberrations.R",
      "name" : "Call aberrations from segmented copy number data"
    }, {
      "id" : "acgh-identify-regions.R",
      "name" : "Identify common regions from called copy number data"
    }, {
      "id" : "acgh-add-cytobands.R",
      "name" : "Add cytogenetic bands"
    }, {
      "id" : "acgh-count-overlapping-cnvs.R",
      "name" : "Count overlapping CNVs"
    }, {
      "id" : "acgh-plot-frequencies.R",
      "name" : "Plot copy number aberration frequencies"
    }, {
      "id" : "cna-count-aberrations.R",
      "name" : "Count the number of aberrations per sample"
    }, {
      "id" : "acgh-cluster.R",
      "name" : "Cluster called copy number data"
    }, {
      "id" : "cna-correlate.R",
      "name" : "Plot correlations of called copy number data"
    }, {
      "id" : "acgh-group-test.R",
      "name" : "Group tests for called copy number data"
    }, {
      "id" : "acgh-survival-test.R",
      "name" : "Survival test for called copy number data"
    }, {
      "id" : "acgh-plot-survival.R",
      "name" : "Plot survival curves for called copy number data"
    }, {
      "id" : "cna-fuse-regions-by-column.R",
      "name" : "Fuse regions by column value"
    }, {
      "id" : "cna-fuse-regions-manually.R",
      "name" : "Fuse regions manually"
    }, {
      "id" : "acgh-convert-from-probes-to-genes.R",
      "name" : "Detect genes from called copy number data"
    }, {
      "id" : "acgh-pathways-go.R",
      "name" : "GO enrichment for called gene copy numbers"
    }, {
      "id" : "acgh-match-probes.R",
      "name" : "Match copy number and expression features"
    }, {
      "id" : "acgh-plot-combined-profile.R",
      "name" : "Plot profiles of matched copy number and expression"
    }, {
      "id" : "acgh-expression-test.R",
      "name" : "Test for copy-number-induced expression changes"
    }, {
      "id" : "acgh-plot-combined-expression.R",
      "name" : "Plot copy-number-induced gene expression"
    } ]
  }, {
    "name" : "Metagenomics",
    "color" : "#83010b",
    "hidden" : false,
    "tools" : [ {
      "id" : "mothur-sffinfo.R",
      "name" : "Extract sequences from a SFF file"
    }, {
      "id" : "merge-fasta-qual.R",
      "name" : "Merge FASTA or QUAL files"
    }, {
      "id" : "mothur-summaryseqs.R",
      "name" : "Summarize sequences with Mothur"
    }, {
      "id" : "mothur-trimseqs-uniqueseqs.R",
      "name" : "Trim and filter sequences with Mothur"
    }, {
      "id" : "mothur-alignseqs.R",
      "name" : "Align sequences with Mothur"
    }, {
      "id" : "mothur-filterseqs.R",
      "name" : "Filter sequence alignment with Mothur"
    }, {
      "id" : "mothur-uniqueseqs.R",
      "name" : "Extract unique aligned sequences with Mothur"
    }, {
      "id" : "mothur-precluster.R",
      "name" : "Precluster aligned sequences with Mothur"
    }, {
      "id" : "mothur-chimera-uchime.R",
      "name" : "Remove chimeric sequences with Mothur"
    }, {
      "id" : "mothur-classifyseqs.R",
      "name" : "Classify sequences to taxonomic units with Mothur"
    }, {
      "id" : "mothur-analyses.R",
      "name" : "Statistical analysis for marker gene studies"
    } ]
  } ]
} ]