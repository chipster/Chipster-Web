  [
    {
    "id":1,
    "name":"Variants",
    "nodes": [
            {
              "name": "Call SNPs and short INDELs",
              "tool": "samtools-snp-indel-single.R"
            },
            {
              "name": "Filter and analyse variants",
              "tool": "vcftools.R"
            },
            {
              "name": "Annotate variants",
              "tool": "annotate-variant.R"
            }
          ]
    },
    {
    "id":2,
    "name":"Metagenomics",
    "nodes": [
            {
              "name": "Extract sequences from a SFF file",
              "tool": "mothur-sffinfo.R"
            },
            {
              "name": "Merge FASTA or QUAL files",
              "tool": "merge-fasta-qual.R"
            },
            {
              "name": "Summarize sequences with Mothur",
              "tool": "mothur-summaryseqs.R"
            },
            {
              "name": "Trim and filter sequences with Mothur",
              "tool": "mothur-trimseqs-uniqueseqs.R"
            },
            {
              "name": "Align sequences with Mothur",
              "tool": "mothur-alignseqs.R"
            },
            {
              "name": "Filter sequence alignment with Mothur",
              "tool": "mothur-filterseqs.R"
            },
            {
              "name": "Extract unique aligned sequences with Mothur",
              "tool": "mothur-uniqueseqs.R"
            },
            {
              "name": "Precluster aligned sequences with Mothur",
              "tool": "mothur-precluster.R"
            },
            {
              "name": "Remove chimeric sequences with Mothur",
              "tool": "mothur-chimera-uchime.R"
            },
            {
              "name": "Classify sequences to taxonomic units with Mothur",
              "tool": "mothur-classifyseqs.R"
            },
            {
              "name": "Statistical analysis for marker gene studies",
              "tool": "mothur-analyses.R"
            }
        ]
    },
    {
    "id":3,
    "name":"Utilities",
    "nodes": [
            {
              "name": "Define NGS experiment",
              "tool": "ngs-create-experiment.R"
            },
            {
              "name": "Filter table by column term",
              "tool": "ngs-filter-annotations.R"
            },
            {
              "name": "Filter table by column value",
              "tool": "ngs-filter-results-column.R"
            },
            {
              "name": "Filter BED by column value",
              "tool": "filter-bed-value.R"
            },
            {
              "name": "Extract samples from table",
              "tool": "extract-samples-from-dataset.R"
            },
            {
              "name": "Table converter",
              "tool": "select_columns.R"
            },
            {
              "name": "Sort table by column",
              "tool": "sort_and_select_columns.R"
            },
            {
              "name": "Join tables",
              "tool": "join_tsv_files.R"
            },
            {
              "name": "Preprocess count table",
              "tool": "process-preprocessed-counts.R"
            },
            {
              "name": "Normalise count table",
              "tool": "normalise-counts.R"
            },
            {
              "name": "Annotate Ensembl identifiers",
              "tool": "annotate-ensembl-ids.R"
            },
            {
              "name": "Plot normalized counts for a gene",
              "tool": "deseq2-normalized-counts-for-gene.R"
            },
            {
              "name": "A5 assembly pipeline for microbial genomes",
              "tool": "a5-miseq.R"
            },
            {
              "name": "Index BAM",
              "tool": "samtools-index.R"
            },
            {
              "name": "Sort and index BAM",
              "tool": "samtools-sort-index-BAM.R"
            },
            {
              "name": "Convert SAM to BAM, sort and index",
              "tool": "samtools-convert-SAMtoBAM-sort-index.R"
            },
            {
              "name": "Make a subset of BAM",
              "tool": "samtools-subset.R"
            },
            {
              "name": "Merge BAM",
              "tool": "samtools-merge.R"
            },
            {
              "name": "Statistics for BAM",
              "tool": "samtools-idxstats.R"
            },
            {
              "name": "Count alignments in BAM",
              "tool": "samtools-count.R"
            },
            {
              "name": "Remove duplicate reads from BAM",
              "tool": "samtools-rmdup.R"
            },
            {
              "name": "Create consensus sequence from BAM",
              "tool": "samtools-consensus.R"
            },
            {
              "name": "Index FASTA",
              "tool": "samtools-index-fasta.R"
            },
            {
              "name": "Retrieve unique alignments from BAM",
              "tool": "unique-alignments-from-bam.R"
            },
            {
              "name": "Convert BAM to BED",
              "tool": "bedtools-bamtobed.R"
            },
            {
              "name": "Convert FASTQ to FASTA",
              "tool": "fastx-fastq-to-fasta.R"
            },
            {
              "name": "Make a subset of FASTQ",
              "tool": "subset-fastq.R"
            },
            {
              "name": "Sort BED",
              "tool": "SortBed.java"
            },
            {
              "name": "Sort GTF",
              "tool": "SortGtf.java"
            },
            {
              "name": "Sort TSV",
              "tool": "SortTsv.java"
            },
            {
              "name": "Sort VCF",
              "tool": "SortVcf.java"
            },
            {
              "name": "Extract features from BED",
              "tool": "extract-features-from-BED.R"
            },
            {
              "name": "FASTA from BED",
              "tool": "bedtools-fastafrombed.R"
            },
            {
              "name": "Rename reads",
              "tool": "fastx-renamer.R"
            },
            {
              "name": "Remove duplicate reads from FASTQ",
              "tool": "fastx-collapser.R"
            },
            {
              "name": "Download file",
              "tool": "DownloadFile.java"
            },
            {
              "name": "Extract .tar.gz file",
              "tool": "extract_gzip_tar.py"
            },
            {
              "name": "Extract .gz file",
              "tool": "gunzip.py"
            },
            {
              "name": "Test data input",
              "tool": "test-data-in.R"
            },
            {
              "name": "Test data input and output in R",
              "tool": "test-data-in-out.R"
            },
            {
              "name": "Test data input and output in Python",
              "tool": "test-data-in-out.py"
            },
            {
              "name": "Download file",
              "tool": "DownloadFile.java"
            }
        ]
    },
    {
    "id":4,
    "name":"Alignment",
    "nodes": [
            {
              "name": "Bowtie2 for single end reads",
              "tool": "bowtie2.R"
            },
            {
              "name": "Bowtie2 for paired end reads",
              "tool": "bowtie2-paired-end.R"
            },
            {
              "name": "Bowtie2 for single end reads and own genome",
              "tool": "bowtie2-with-index-building.R"
            },
            {
              "name": "Bowtie2 for paired end reads and own genome",
              "tool": "bowtie2-paired-end-with-index-building.R"
            },
            {
              "name": "TopHat2 for paired end reads",
              "tool": "tophat2.R"
            },
            {
              "name": "TopHat2 for single end reads",
              "tool": "tophat2-single-end.R"
            },
            {
              "name": "TopHat2 for paired end reads and own genome",
              "tool": "tophat2-with-index-building.R"
            },
            {
              "name": "TopHat2 for single end reads and own genome",
              "tool": "tophat2-single-end-with-index-building.R"
            },
            {
              "name": "BWA for single end reads",
              "tool": "bwa.R"
            },
            {
              "name": "BWA for paired end reads",
              "tool": "bwa-paired-end.R"
            },
            {
              "name": "BWA for single end reads and own genome",
              "tool": "bwa-with-index-building.R"
            },
            {
              "name": "BWA for paired end reads and own genome",
              "tool": "bwa-paired-end-with-index-building.R"
            },
            {
              "name": "BWA MEM for single end reads",
              "tool": "bwa-mem.R"
            },
            {
              "name": "BWA MEM for paired-end reads",
              "tool": "bwa-mem-paired-end.R"
            },
            {
              "name": "BWA MEM for single end reads and own genome",
              "tool": "bwa-mem-with-index-building.R"
            },
            {
              "name": "BWA MEM for paired-end reads and own genome",
              "tool": "bwa-mem-paired-end-with-index-building.R"
            },
            {
              "name": "Bowtie for single end reads",
              "tool": "bowtie.R"
            },
            {
              "name": "Bowtie for paired end reads",
              "tool": "bowtie-paired-end.R"
            },
            {
              "name": "Bowtie for single end reads and own genome",
              "tool": "bowtie-with-index-building.R"
            },
            {
              "name": "Bowtie for paired end reads and own genome",
              "tool": "bowtie-paired-end-with-index-building.R"
            }
        ]
    },
    {
    "id":5,
    "name":"Preprocessing",
    "nodes": [
            {
              "name": "Filter reads for several criteria with PRINSEQ",
              "tool": "prinseq-filter.R"
            },
            {
              "name": "Filter reads for adapters, length and Ns with FastX",
              "tool": "fastx-clipper.R"
            },
            {
              "name": "Filter reads for quality with FastX",
              "tool": "fastx-quality-filter.R"
            },
            {
              "name": "Trim reads for several criteria with PRINSEQ",
              "tool": "prinseq-trimmer.R"
            },
            {
              "name": "Trim reads with Trimmomatic",
              "tool": "trimmomatic.R"
            },
            {
              "name": "Trim reads with FastX",
              "tool": "fastx-trimmer.R"
            },
            {
              "name": "Trim primers/adaptors with TagCleaner",
              "tool": "tagcleaner-trim.R"
            },
            {
              "name": "Predict primers/adaptors with TagCleaner",
              "tool": "tagcleaner-predict.R"
            },
            {
              "name": "Statistics for primers/adaptors with TagCleaner",
              "tool": "tagcleaner-statistics.R"
            }
        ]
    },
    {
    "id":6,
    "name":"RNA-seq",
    "nodes": [
            {
              "name": "Count aligned reads per genes with HTSeq",
              "tool": "htseq-count.R"
            },
            {
              "name": "Count aligned reads per genes with HTSeq using own GTF",
              "tool": "htseq-count-own-gtf.R"
            },
            {
              "name": "Count aligned reads per exons for DEXSeq",
              "tool": "dexseq-exoncount.R"
            },
            {
              "name": "Count aligned reads per exons for DEXSeq using own GTF",
              "tool": "dexseq-exoncount-own-gtf.R"
            },
            {
              "name": "Count reads per transcripts using eXpress",
              "tool": "express.R"
            },
            {
              "name": "Differential expression using DESeq2",
              "tool": "deseq2.R"
            },
            {
              "name": "Differential expression using DESeq",
              "tool": "dea-deseq.R"
            },
            {
              "name": "Differential expression using edgeR",
              "tool": "ngs-dea-edger-RNA.R"
            },
            {
              "name": "Differential expression using edgeR for multivariate experiments",
              "tool": "edgeR-multivariate.R"
            },
            {
              "name": "Differential exon expression using DEXSeq",
              "tool": "DEXSeq.R"
            },
            {
              "name": "Assemble transcripts using Cufflinks",
              "tool": "cufflinks2.R"
            },
            {
              "name": "Merge transcript assemblies with Cuffmerge",
              "tool": "cuffmerge2.R"
            },
            {
              "name": "Compare assembly to reference using Cuffcompare",
              "tool": "cuffcompare2.R"
            },
            {
              "name": "Differential expression using Cuffdiff",
              "tool": "cuffdiff2.R"
            },
            {
              "name": "Hypergeometric test for ConsensusPathDB",
              "tool": "annotate-cpdb.py"
            }
        ]
  },
  {
    "id":7,
    "name":"Quality control",
    "nodes": [
            {
              "name": "Read quality with FastQC",
              "tool": "fastqc.R"
            },
            {
              "name": "Read quality statistics with FASTX",
              "tool": "fastx-statistics.R"
            },
            {
              "name": "Read quality statistics with PRINSEQ",
              "tool": "prinseq-statistics.R"
            },
            {
              "name": "RNA-seq quality metrics with RseQC",
              "tool": "rseqc.R"
            },
            {
              "name": "PCA and heatmap of samples with DESeq2",
              "tool": "deseq2-pca-heatmap.R"
            }
         ]
    },
    {
    "id":8,
    "name":"Matching sets of genomic regions",
    "nodes":
          [
          {
            "name": "Find overlapping regions",
            "tool": "FindOverlappingTool.java"
          },
          {
            "name": "Remove overlapping regions",
            "tool": "RemoveOverlappingTool.java"
          },
          {
            "name": "Combine region files",
            "tool": "CombineRegionsTool.java"
          },
          {
            "name": "Subtract BED",
            "tool": "bedtools-subtractbed.R"
          },
          {
            "name": "Intersect BED",
            "tool": "bedtools-intersectbed.R"
          },
          {
            "name": "Closest BED",
            "tool": "bedtools-closestbed.R"
          },
          {
            "name": "Window BED",
            "tool": "bedtools-windowbed.R"
          },
          {
            "name": "Merge BED",
            "tool": "bedtools-mergebed.R"
          },
          {
            "name": "Coverage BED",
            "tool": "bedtools-coveragebed.R"
          },
          {
            "name": "Genome coverage BED",
            "tool": "bedtools-genomecoveragebed.R"
          },
          {
            "name": "Overlap BED",
            "tool": "bedtools-overlap.R"
          },
          {
            "name": "Increase regions in BED",
            "tool": "bedtools-slopbed.R"
          },
          {
            "name": "Overlap BEDPE with BED",
            "tool": "bedtools-pairtobed.R"
          },
          {
            "name": "Compare two BEDPE files",
            "tool": "bedtools-pairtopair.R"
          }
      ]
    },
    {
    "id":9,
    "name":"miRNA-seq",
    "nodes": [
          {
            "name": "Convert genomic BAM file to count table",
            "tool": "convert-bam-to-edger.R"
          },
          {
            "name": "Convert miRBased BAM file to count table",
            "tool": "convert-miRBase-bam-to-edger.R"
          },
          {
            "name": "Differential expression using DESeq2",
            "tool": "deseq2.R"
          },
          {
            "name": "Differential expression using DESeq",
            "tool": "dea-deseq.R"
          },
          {
            "name": "Differential expression using edgeR",
            "tool": "ngs-dea-edger-RNA.R"
          },
          {
            "name": "Differential expression using edgeR for multivariate experiments",
            "tool": "edgeR-multivariate.R"
          },
          {
            "name": "Find miRNA targets",
            "tool": "ngs-annotate-miRNA-targets.R"
          },
          {
            "name": "GO enrichment for miRNA targets",
            "tool": "pathways-mirna-hyperg-go.R"
          },
          {
            "name": "KEGG enrichment for miRNA targets",
            "tool": "pathways-mirna-hyperg-kegg.R"
          },
          {
            "name": "Correlate miRNA-seq and RNA-seq data",
            "tool": "miRNA_RNA-seq_integration.R"
          },
          {
            "name": "Correlate miRNA-seq and gene expression array data",
            "tool": "ngs-correlation-analysis-mirna.R"
          },
          {
            "name": "Up-down analysis of miRNA target genes with array data",
            "tool": "ngs-up-down-analysis-mirna.R"
          },
          {
            "name": "Extract gene expression array data for miRNA targets",
            "tool": "ngs-extract-target-gene-expression.R"
          }
        ]
    },
    {
    "id":10,
    "name":"CNA-seq",
    "nodes": [
            {
              "name": "Define CNA-seq experiment",
              "tool": "cna-define-experiment.R"
            },
            {
              "name": "Filter copy number bins",
              "tool": "cna-filter-bins.R"
            },
            {
              "name": "Correct for GC content and mappability",
              "tool": "cna-correct.R"
            },
            {
              "name": "Normalize copy number data",
              "tool": "cna-normalize.R"
            },
            {
              "name": "Plot copy number profiles",
              "tool": "cna-plot-profile.R"
            },
            {
              "name": "Segment copy number data",
              "tool": "cna-segment.R"
            },
            {
              "name": "Call aberrations from segmented copy number data",
              "tool": "cna-call-aberrations.R"
            },
            {
              "name": "Identify common regions from called copy number data",
              "tool": "acgh-identify-regions.R"
            },
            {
              "name": "Add cytogenetic bands",
              "tool": "acgh-add-cytobands.R"
            },
            {
              "name": "Count overlapping CNVs",
              "tool": "acgh-count-overlapping-cnvs.R"
            },
            {
              "name": "Plot copy number aberration frequencies",
              "tool": "acgh-plot-frequencies.R"
            },
            {
              "name": "Count the number of aberrations per sample",
              "tool": "cna-count-aberrations.R"
            },
            {
              "name": "Cluster called copy number data",
              "tool": "acgh-cluster.R"
            },
            {
              "name": "Plot correlations of called copy number data",
              "tool": "cna-correlate.R"
            },
            {
              "name": "Group tests for called copy number data",
              "tool": "acgh-group-test.R"
            },
            {
              "name": "Survival test for called copy number data",
              "tool": "acgh-survival-test.R"
            },
            {
              "name": "Plot survival curves for called copy number data",
              "tool": "acgh-plot-survival.R"
            },
            {
              "name": "Fuse regions by column value",
              "tool": "cna-fuse-regions-by-column.R"
            },
            {
              "name": "Fuse regions manually",
              "tool": "cna-fuse-regions-manually.R"
            },
            {
              "name": "Detect genes from called copy number data",
              "tool": "acgh-convert-from-probes-to-genes.R"
            },
            {
              "name": "GO enrichment for called gene copy numbers",
              "tool": "acgh-pathways-go.R"
            },
            {
              "name": "Match copy number and expression features",
              "tool": "acgh-match-probes.R"
            },
            {
              "name": "Plot profiles of matched copy number and expression",
              "tool": "acgh-plot-combined-profile.R"
            },
            {
              "name": "Test for copy-number-induced expression changes",
              "tool": "acgh-expression-test.R"
            },
            {
              "name": "Plot copy-number-induced gene expression",
              "tool": "acgh-plot-combined-expression.R"
            }
        ]
    },
    {
    "id":11,
    "name":"ChIP, DNase, and Methyl-seq",
    "nodes": [
            {
              "name": "Find peaks using MACS2",
              "tool": "macs2.R"
            },
            {
              "name": "Find peaks using MACS, treatment only",
              "tool": "ngs-find-peaks-macs-one.R"
            },
            {
              "name": "Find peaks using MACS, treatment vs. control",
              "tool": "ngs-find-peaks-macs-two.R"
            },
            {
              "name": "Find broad peaks using F-seq",
              "tool": "ngs-find-peaks-fseq.R"
            },
            {
              "name": "Find the nearest genes for regions",
              "tool": "ngs-find-nearest-genes.R"
            },
            {
              "name": "Find unique and annotated genes",
              "tool": "ngs-find-unique-genes.R"
            },
            {
              "name": "GO enrichment for list of genes",
              "tool": "pathways-ngs-hyperg-go.R"
            },
            {
              "name": "Find motifs with GADEM and match to JASPAR",
              "tool": "ngs-find-motifs-jaspar.R"
            },
            {
              "name": "Dimont sequence extractor",
              "tool": "dimont-extract-data.R"
            },
            {
              "name": "Dimont sequence extractor using own genome",
              "tool": "dimont-extract-data-custom.R"
            },
            {
              "name": "Find motifs with Dimont",
              "tool": "dimont.R"
            },
            {
              "name": "DimontPredictor",
              "tool": "dimont-predictor.R"
            },
            {
              "name": "MEDIPS - methylation analysis",
              "tool": "MEDIPS.R"
            }
    ]
  }
]
